// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview An AI-powered quiz about web evolution that provides hints.
 *
 * - webEvolutionQuiz - A function that initiates the web evolution quiz.
 * - WebEvolutionQuizInput - The input type for the webEvolutionQuiz function.
 * - WebEvolutionQuizOutput - The return type for the webEvolutionQuiz function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const WebEvolutionQuizInputSchema = z.object({
  question: z.string().describe('The current question being asked.'),
  userAnswer: z.string().optional().describe('The user-provided answer to the current question, if any.'),
  hintRequest: z.boolean().optional().describe('Whether the user has requested a hint for the current question.'),
  quizHistory: z.array(z.object({
    question: z.string(),
    userAnswer: z.string().optional(),
    isCorrect: z.boolean().optional(),
    hintGiven: z.boolean().optional(),
  })).optional().describe('The history of the quiz, including previous questions, answers, and correctness.'),
});
export type WebEvolutionQuizInput = z.infer<typeof WebEvolutionQuizInputSchema>;

const WebEvolutionQuizOutputSchema = z.object({
  question: z.string().describe('The next question in the quiz.'),
  hint: z.string().optional().describe('A hint to help the user answer the question, if requested and appropriate.'),
  isCorrect: z.boolean().optional().describe('Whether the user answer was correct.'),
  explanation: z.string().optional().describe('An explanation of the correct answer.'),
  quizComplete: z.boolean().describe('Whether the quiz is complete.'),
});
export type WebEvolutionQuizOutput = z.infer<typeof WebEvolutionQuizOutputSchema>;

export async function webEvolutionQuiz(input: WebEvolutionQuizInput): Promise<WebEvolutionQuizOutput> {
  return webEvolutionQuizFlow(input);
}

const prompt = ai.definePrompt({
  name: 'webEvolutionQuizPrompt',
  input: {schema: WebEvolutionQuizInputSchema},
  output: {schema: WebEvolutionQuizOutputSchema},
  prompt: `You are an AI-powered quiz master specializing in the evolution of the web (Web1, Web2, Web3).

  Your goal is to quiz the user and help them learn about web evolution. You should provide engaging and informative questions.

  If the user has requested a hint (hintRequest is true), provide a helpful hint related to the current question, but only if appropriate. Be concise.

  If the user has provided an answer (userAnswer is present), evaluate its correctness and provide feedback. Include an explanation of the correct answer.

  Maintain a conversational and encouraging tone.

  Consider the quiz history to adapt the difficulty and avoid repeating questions.

  The quiz should consist of a maximum of 5 questions.

  Current Question: {{{question}}}
  User Answer: {{{userAnswer}}}
  Hint Requested: {{{hintRequest}}}
  Quiz History: {{{quizHistory}}}
  Output format: JSON.
  `,
});

const webEvolutionQuizFlow = ai.defineFlow(
  {
    name: 'webEvolutionQuizFlow',
    inputSchema: WebEvolutionQuizInputSchema,
    outputSchema: WebEvolutionQuizOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
